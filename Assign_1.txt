CREATE TABLE Client_master(
    client_no VARCHAR(6),
    name VARCHAR(20) not null,
    address1 VARCHAR(30),
    address2 VARCHAR(30),
    city VARCHAR(15),
    state VARCHAR(15),
    pincode NUMBER(6),
    bal_due NUMBER(10, 2),
    CONSTRAINT client_no_pk PRIMARY KEY(client_no),
    CONSTRAINT clinet_no_ck CHECK(client_no like 'C%')
);

CREATE TABLE product_master(
    product_no VARCHAR(6),
    description VARCHAR(50),
    profit_percent NUMBER(3,2)	not null,
    unit_measure VARCHAR(10) not null,
    record_lvl NUMBER (8) not null,
    sell_price NUMBER(8,2)	not null,
    cost_price NUMBER(8,2)	not null,
    CONSTRAINT product_no_pk PRIMARY KEY(product_no),
    CONSTRAINT product_no_ck CHECK(product_no LIKE 'P%'),
    CONSTRAINT sell_price_ck CHECK(sell_price != 0),
    CONSTRAINT cost_price_ck CHECK(cost_price != 0)
);

CREATE TABLE salesman_master(
    salesman_no VARCHAR(6),
    salesman_name VARCHAR(20) not null,
    Address1 VARCHAR(30) not null,
    Address2 VARCHAR(30),
    city VARCHAR(20),	
    pincode VARCHAR(6),
    state VARCHAR(20),
    sal_amt NUMBER(8,2) not null,
    tgt_to_get NUMBER(6,2) not null,
    ytd_sales NUMBER(6,2) not null,
    remarks VARCHAR(60),
    CONSTRAINT salesman_no_pk PRIMARY KEY(salesman_no),
    CONSTRAINT salesman_no_ck CHECK(salesman_no LIKE 'S%'),
    CONSTRAINT sal_amt_ck CHECK(sal_amt != 0),
    CONSTRAINT tgt_to_get_ck CHECK(tgt_to_get != 0)
);

CREATE TABLE sales_order (
    s_order_no VARCHAR(6),
    s_order_date DATE,
    client_no VARCHAR(6),
    dely_addr VARCHAR(25),
    salesman_no VARCHAR(6),
    dely_type CHAR(1) DEFAULT 'F',
    billed_yn CHAR(1) DEFAULT 'N',
    dely_date DATE,
    order_status VARCHAR(10),
    CONSTRAINT s_order_no_pk PRIMARY KEY(s_order_no),
    CONSTRAINT s_order_no_ck CHECK(s_order_no LIKE 'O%'),
    CONSTRAINT dely_type_ck CHECK(dely_type IN ('P', 'F')),
    CONSTRAINT billed_yn_ck CHECK(billed_yn IN ('Y', 'N')),
    CONSTRAINT dely_date_ck CHECK(dely_date >= s_order_date),
    CONSTRAINT order_status_ck CHECK (order_status IN ('in process', 'fulfilled', 'backorder', 'canceled')),
    CONSTRAINT client_no_fk FOREIGN KEY(client_no) REFERENCES Client_master(client_no),
    CONSTRAINT salesman_no_fk FOREIGN KEY(salesman_no) REFERENCES Salesman_master(salesman_no)  
);

CREATE TABLE sales_order_details( 
    s_order_no VARCHAR(6), 
    product_no VARCHAR(6), 
    qty_ordered NUMBER(8), 
    qty_disp NUMBER(8), 
    product_rate NUMBER(10,2), 
    CONSTRAINT s_order_no_fk FOREIGN KEY(s_order_no) REFERENCES sales_order(s_order_no), 
    CONSTRAINT product_no_fk FOREIGN KEY(product_no) REFERENCES product_master(product_no) 
);

CREATE TABLE Challan_Header( 
    challan_no VARCHAR(6), 
    s_order_no VARCHAR(6),
    challan_date DATE NOT NULL, 
    billed_yn CHAR(1) DEFAULT 'N', 
    CONSTRAINT challan_no_pk PRIMARY KEY(challan_no), 
    CONSTRAINT challan_no_ck CHECK(challan_no LIKE 'CH%'), 
    CONSTRAINT s_order_no_challan_fk FOREIGN KEY(s_order_no) REFERENCES sales_order(s_order_no), 
    CONSTRAINT billed_yn_challan_ck CHECK(billed_yn IN('Y', 'N')) 
);

CREATE TABLE Challan_details(
    challan_no VARCHAR(6),
    product_no VARCHAR(6), 
    qty_disp NUMBER(4,2) NOT NULL,
    CONSTRAINT challan_no_product_no_pk PRIMARY KEY(challan_no, product_no),
    CONSTRAINT challan_no_fk FOREIGN KEY(challan_no) REFERENCES challan_header(challan_no),
    CONsTRAINT product_no FOREIGN KEY(product_no) REFERENCES product_master(product_no)
);

INSERT INTO client_master VALUES
('C00001', 'Ivan Bayross', NULL, NULL, 'Bombay', 'Maharashtra', 400054, 15000);

INSERT INTO client_master VALUES
('C00002', 'Vandana Saitwal', NULL, NULL, 'Madras', 'Tamil Nadu', 780001, 0);
    
INSERT INTO client_master VALUES
('C00003', 'Pramada Jaguste', NULL, NULL, 'Bombay', 'Maharashtra', 400057, 5000);

INSERT INTO client_master VALUES
('C00004', 'Basu Navindgi', NULL, NULL, 'Bombay', 'Maharashtra', 400056, 0);
    
INSERT INTO client_master VALUES
('C00005', 'Ravi Sreedharan', NULL, NULL, 'Delhi', 'Delhi', 100001, 2000);

INSERT INTO client_master VALUES
('C00006', 'Rukmini', NULL, NULL, 'Bombay', 'Maharashtra', 400050, 0);

alter table product_master add qty number(8);
insert into product_master values('P00001','1.44 Floppies',5,'Piece',100,20,525,500);
insert into product_master values('P03453','Monitors',6,'Piece',10,3,12000,11280);
insert into product_master values('P06734','Mouse',5,'Piece',20,50,1050,1000);
insert into product_master values('P07865','1.22 Floppies',5,'Piece',100,20,525,500);
insert into product_master values('P07868','Keyboards',2,'Piece',10,3,3150,3050);
insert into product_master values('P07885','CD Drive',2.5,'Piece',10,3,5250,5100);
insert into product_master values('P07965','540 HDD',4,'Piece',10,3,8400,8000);
insert into product_master values('P07975','1.44 Drive',5,'Piece',10,3,1050,1000);
insert into product_master values('P08865','1.22 Drive',5,'Piece',2,3,1050,1000);

insert into salesman_master values('S00001','Kiran','A/14','Worli','Bombay',400002,'MAH',3000,100,50,'Good');
insert into salesman_master values('S00002','Manish','65','Nariman','Bombay',400001,'MAH',3000,200,100,'Good');
insert into salesman_master values('S00003','Ravi','P-7','Bandra','Bombay',400032,'MAH',3000,200,100,'Good');
insert into salesman_master values('S00004','Ashish','A/5','Juhu','Bombay',400044,'MAH',3500,200,150,'Good');

alter table sales_order drop column dely_addr;
insert into sales_order(s_order_no,s_order_date,client_no,dely_type,billed_Yn,salesman_no,dely_date,order_status)
values('O19001','12-Jan-1996','C00001','F','N','S00001','20-Jan-1996','in process');

insert into sales_order(s_order_no,s_order_date,client_no,dely_type,billed_Yn,salesman_no,dely_date,order_status)
values('O19002','25-Jan-1996','C00002','P','N','S00002','27-Jan-1996','canceled');

insert into sales_order(s_order_no,s_order_date,client_no,dely_type,billed_Yn,salesman_no,dely_date,order_status)
values('O46865','18-Feb-1996','C00003','F','Y','S00003','20-Feb-1996','fulfilled');

insert into sales_order(s_order_no,s_order_date,client_no,dely_type,billed_Yn,salesman_no,dely_date,order_status)
values('O19003','03-Apr-1996','C00001','F','Y','S00001','07-Apr-1996','fulfilled');

insert into sales_order(s_order_no,s_order_date,client_no,dely_type,billed_Yn,salesman_no,dely_date,order_status)
values('O46866','20-May-1996','C00004','P','N','S00002','22-May-1996','canceled');

insert into sales_order(s_order_no,s_order_date,client_no,dely_type,billed_Yn,salesman_no,dely_date,order_status)
values('O10008','24-May-1996','C00005','F','N','S00004','26-May-1996','in process');

insert into sales_order_details values('O19001','P00001',4,4,525);
insert into sales_order_details values('O19001','P07965',2,1,8400);
insert into sales_order_details values('O19001','P07885',2,1,5250);
insert into sales_order_details values('O19002','P00001',10,0,525);
insert into sales_order_details values('O46865','P07868',3,3,3150);
insert into sales_order_details values('O46865','P07885',3,1,5250);
insert into sales_order_details values('O46865','P00001',10,10,525);
insert into sales_order_details values('O46865','P03453',4,4,1050);
insert into sales_order_details values('O19003','P03453',2,2,1050);
insert into sales_order_details values('O19003','P06734',1,1,12000);
insert into sales_order_details values('O46866','P07965',1,0,8400);
insert into sales_order_details values('O46866','P07975',1,0,1050);
insert into sales_order_details values('O19003','P00001',10,4,525);
insert into sales_order_details values('O19003','P07975',5,3,1050);

insert into challan_header values('CH9001','O19001','12-Dec-1995','Y');
insert into challan_header values('CH6865','O46865','12-Nov-1995','Y');
insert into challan_header values('CH3965','O10008','12-Oct-1995','Y');

insert into challan_details values('CH9001','P00001',4);
insert into challan_details values('CH9001','P07965',1);
insert into challan_details values('CH9001','P07885',1);
insert into challan_details values('CH6865','P07868',3);
insert into challan_details values('CH6865','P03453',4);
insert into challan_details values('CH6865','P00001',10);
insert into challan_details values('CH3965','P00001',5);
insert into challan_details values('CH3965','P07975',2);

--1)    Find out the names of all the clients.
SELECT * FROM client_master;

--2)	Print the entire client_master table.
SELECT * FROM client_master;

--3)	Retrieve the list of names and the cities of all the clients
SELECT name, city FROM client_master;

--4)	List the various products available from the product_master table.
SELECT product_no, description FROM product_master;

--5)	Find the names of all clients having ‘a’ as the second letter in their table.
SELECT name FROM client_master WHERE SUBSTR(name, 2, 1) = 'a';

--6)	Find the names of all clients who stay in a city whose second letter is ‘a’
SELECT name FROM client_master WHERE SUBSTR(city, 2, 1) = 'a';

--7)	Find out the clients who stay in a city ‘Bombay’ or city ‘Delhi’ or city ‘Madras’.
SELECT name FROM client_master WHERE city IN ('Bombay', 'Delhi', 'Madras');

--8)	List all the clients who are located in Bombay.
SELECT * FROM client_master WHERE city = 'Bombay';

--9)	Print the list of clients whose bal_due are greater than value 10000
SELECT name FROM client_master WHERE bal_due > 10000;

--10)	Print the information from sales_order table of orders placed in the month of January.
SELECT * FROM sales_order WHERE EXTRACT(MONTH FROM s_order_date) = 1;

--11)	Display the order information for client_no ‘C00001’ and ‘C00002’
SELECT * FROM sales_order WHERE client_no IN ('C00001', 'C00002');

--12)	Find the products with description as ‘1.44 Drive’ and ‘1.22 Drive’
SELECT * FROM product_master WHERE description IN ('1.44 Drive', '1.22 Drive');

--13)	Find the products whose selling price is greater than 2000 and less than or equal to 5000
SELECT * FROM product_master WHERE sell_price > 2000 AND sell_price <= 5000;

--14)	Find the products whose selling price is more than 1500 and also find the new selling price as original selling price * 15
SELECT description, sell_price * 15 AS new_price FROM product_master WHERE sell_price > 1500;

--15)	Rename the new column in the above query as new_price
SELECT description, sell_price * 15 AS new_price FROM product_master WHERE sell_price > 1500;

--16)	Find the products whose cost price is less than 1500
SELECT * FROM product_master WHERE cost_price < 1500;

--17)	List the products in sorted order of their description.
SELECT * FROM product_master ORDER BY description;

--18)	Calculate the square root the price of each product.
SELECT product_no, description, sell_price, SQRT(sell_price) AS square_root_price FROM product_master;

--19)	Divide the cost of product ‘540 HDD’ by difference between its price and 100
SELECT description, cost_price / (sell_price - 100) AS result FROM product_master WHERE product_no = 'P07965';

--20)	List the names, city and state of clients not in the state of Maharashtra
SELECT name, city, state FROM client_master WHERE state <> 'Maharashtra';

--21)	List the product_no, description, sell_price of products whose description begin with letter ‘M’
SELECT product_no, description, sell_price FROM product_master WHERE description LIKE 'M%';

--22)	List all the orders that were canceled in the month of May.
SELECT * FROM sales_order WHERE EXTRACT(MONTH FROM s_order_date) = 5 AND order_status = 'Canceled';

--23)	Count the total number of orders.
SELECT COUNT(*) AS total_orders FROM sales_order;

--24)	Calculate the average price of all the products.
SELECT AVG(sell_price) AS average_price FROM product_master;

--25)	Calculate the minimum price of products.
SELECT MIN(sell_price) AS minimum_price FROM product_master;

--26)	Determine the maximum and minimum product prices. Rename the title as max_price and min_price respectively.
SELECT MAX(sell_price) AS max_price, MIN(sell_price) AS min_price FROM product_master;

--27)	Count the number of products having price greater than or equal to 1500.
SELECT COUNT(*) AS num_products FROM product_master WHERE sell_price >= 1500;

--28)	Find all the products whose qty_on_hand is less than reorder level.
SELECT * FROM product_master WHERE qty_on_hand < record_lvl;

--29)	Print the information of client_master, product_master, sales_order table in the following formate for all the records {cust_name} has placed order {order_no} on {s_order_date}.
SELECT * FROM product_master WHERE qty_on_hand < record_lvl;

--30)	Print the description and total qty sold for each product.
SELECT od.product_no, pm.description, SUM(od.qty_disp) AS total_qty_sold
FROM sales_order_details od
INNER JOIN product_master pm ON od.product_no = pm.product_no
GROUP BY od.product_no, pm.description;

--31)	Find the value of each product sold.
SELECT od.product_no, pm.description, SUM(od.qty_disp * pm.sell_price) AS total_value_sold
FROM sales_order_details od
INNER JOIN product_master pm ON od.product_no = pm.product_no
GROUP BY od.product_no, pm.description;

--32)	Calculate the average qty sold for each client that has a maximum order value of 15000.00
SELECT so.client_no, AVG(od.qty_disp) AS avg_qty_sold
FROM sales_order so
INNER JOIN sales_order_details od ON so.s_order_no = od.s_order_no
GROUP BY so.client_no
HAVING MAX(so.bal_due) <= 15000.00;

--33)	Find out the total sales amount receivable for the month of jan. it will be the sum total of all the billed orders for the month.
SELECT SUM(CASE WHEN EXTRACT(MONTH FROM s_order_date) = 1 THEN bal_due ELSE 0 END) AS january_sales
FROM sales_order
WHERE billed_yn = 'Y';

--34)	Print the information of product_master, order_detail table in the following format for all the records
SELECT pm.description, SUM(od.qty_disp * pm.sell_price) AS total_sales
FROM product_master pm
INNER JOIN sales_order_details od ON pm.product_no = od.product_no
GROUP BY pm.description;

--35)	Print the information of product_master, order_detail table in the following format for all the records
SELECT pm.description, SUM(od.qty_disp * pm.sell_price) AS total_sales,
       TO_CHAR(s_order_date, 'Month DD, YYYY') AS order_month
FROM product_master pm
INNER JOIN sales_order_details od ON pm.product_no = od.product_no
INNER JOIN sales_order so ON od.s_order_no = so.s_order_no
GROUP BY pm.description, TO_CHAR(s_order_date, 'Month DD, YYYY');

--36)	Find the product_no and description of non-moving products.

--37)	Find the customer name, address1, address2, city and pin code for the client who has placed order no ‘O19001’
--38)	Find the client names who have placed orders before the month of May, 1996
--39)	Find out if product ‘1.44 Drive’ is ordered by client and print the client_no, name to whom it is was sold.
--40)	Find the names of clients who have placed orders worth Rs. 10000 or more.
--41)	Display the order number and day o which clients placed their order.
--42)	Display the month (in alphabets) and date when the order must deliver.
--43)	Display the s_order_date in the format ‘DD-MM-YY’. E.g. 12-February-1996 
--44)	Find the date, 15 days after today’s date.
--45)	Find the number of days elapsed between today’s date and the delivery date of the orders placed by the clients.
--46)	Change the s_order_date of client_no ‘C00001’ to 24/07/96.
--47)	Change the selling price of ‘1.44 Floppy Drive’ to Rs. 1150.00
--48)	Delete the records with order number ‘O19001’ from the order table.
--49)	Delete all the records having delivery date before 10th July’96
--50)	Change the city of client_no ‘C00005’ to ’Bombay’.
--51)	Change the delivery date of order number ‘O10008” to 16/08/96
--52)	Change the bal_due of client_no ‘C00001’ to 1000
--53)	Change the cost price of ‘1.22 Floppy Drive’ to Rs. 950.00.




